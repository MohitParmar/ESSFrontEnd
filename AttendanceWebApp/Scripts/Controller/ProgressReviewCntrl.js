var app = angular.module("myApp", ["angularUtils.directives.dirPagination"]);
app.controller("ProgressReviewController", function ($scope, $http, $filter) {
    $http.defaults.headers.common.Authorization = "Basic " + $("#myEmpUnqId").val(); $scope.currentPage = 1; $scope.itemsPerPage = 10;
    $scope._Conpath = ""; var url_string = window.location.href; var url = new URL(url_string); var urlhost = url.hostname; var urlprotocol = url.protocol;
    $(document).ready(function () { "undefined" != typeof _ConPath && (urlhost === _URLHostName ? $scope._Conpath = _ConPath : $scope._Conpath = urlprotocol + "//" + urlhost + "/api/") });
    $scope.ResetView = function () { window.location.reload(!0) }; jQuery.support.cors = true;
    ///Get Employee basic info
    $scope.GetEmpInfo = function () { var e_Code = $("#eCode").val(); emp = new XMLHttpRequest(); emp.open("GET", $scope._Conpath + "Employee/GetEmployee?empunqid=" + e_Code, true); emp.setRequestHeader("Accept", "application/json"); emp.onreadystatechange = function () { if (4 === emp.readyState) { var json = JSON.parse(emp.responseText); $scope.empdata = json; $scope.$digest(); $scope.GetReviewQtr(e_Code); } }; emp.send(); };
    ///Get Review Quators
    $scope.GetReviewQtr = function (id) { var qtr = new XMLHttpRequest(); qtr.open("GET", $scope._Conpath + "ProgressReview/GetReviewQtr?empUnqId=" + id, true); qtr.setRequestHeader("Accept", "application/json"); qtr.onreadystatechange = function () { if (4 === qtr.readyState) { $("#txtReviewQuator").val(qtr.responseText); }; }; qtr.send(); };
    ///Review Quators entry generated by HR
    $scope.PostReview = function () {
        var e_Code = $("#eCode").val();
        var jsonObj = {}; jsonObj.EmpUnqId = e_Code; jsonObj.AddUser = $("#myEmpUnqId").val(); jsonObj.ReviewQtr = $("#txtReviewQuator").val();
        jsonObj = JSON.stringify(jsonObj);
        var rvw = new XMLHttpRequest(); rvw.open("POST", $scope._Conpath + "ProgressReview/PostReview", true);
        rvw.setRequestHeader("Content-Type", "application/json"); rvw.onreadystatechange = function () {
            if (4 === rvw.readyState && rvw.status === 200) {
                document.getElementById("MessageBox").innerHTML =
                    "<div class='alert alert-success alert-dismissable'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
                    "<strong>Submitted Sucesfully.. </strong></div>"; $('#MessageBox').show();
            };
        }; rvw.send(jsonObj);
    };
    ///Get pending Review/Confirmations for all Supervisors/Releasers/Hr Users
    $scope.gprData; $scope.GetReviews = function (relFlag, hrflg) {
        var gpr = new XMLHttpRequest();
        if (hrflg === true) {
            gpr.open("GET", $scope._Conpath + "ProgressReview/GetReviewsHr", true);
        } else {
            gpr.open("GET", $scope._Conpath + "ProgressReview/GetReviews?empUnqId=" + $("#myEmpUnqId").val() + "&relFlag=" + relFlag, true);
        }
        gpr.setRequestHeader("Accept", "application/json");
        gpr.onreadystatechange = function () {
            if (4 === gpr.readyState) {
                var json = JSON.parse(gpr.responseText);
                var arr = new Array();
                arr = json;
                var myArray = [];
                for (var i = 0; i < arr.length; i++) {
                    myArray.push([]);
                    myArray[i].empUnqId = arr[i].empUnqId;
                    myArray[i].empName = arr[i].employee.empName;
                    myArray[i].wrkGrpDesc = arr[i].employee.wrkGrpDesc;
                    myArray[i].unitName = arr[i].employee.unitName;
                    myArray[i].deptName = arr[i].employee.deptName;
                    myArray[i].statName = arr[i].employee.statName;
                    myArray[i].catName = arr[i].employee.catName;
                    myArray[i].empTypeName = arr[i].employee.empTypeName;
                    myArray[i].gradeName = arr[i].employee.gradeName;
                    myArray[i].desgName = arr[i].employee.desgName;
                    myArray[i].location = arr[i].employee.location;
                    myArray[i].joinDate = arr[i].employee.joinDate;
                    myArray[i].reviewQtrNo = arr[i].reviewQtrNo;
                    myArray[i].isConfirmation = arr[i].isConfirmation;
                    myArray[i].reviewDate = arr[i].reviewDate;
                    myArray[i].periodFrom = arr[i].periodFrom;
                    myArray[i].periodTo = arr[i].periodTo;
                    myArray[i].assignments = arr[i].assignments;
                    myArray[i].strength = arr[i].strength;
                    myArray[i].improvements = arr[i].improvements;
                    myArray[i].suggestions = arr[i].suggestions;
                    myArray[i].rating = arr[i].rating;
                    myArray[i].remarks = arr[i].remarks;
                    myArray[i].recommendation = arr[i].recommendation;
                    myArray[i].addDt = arr[i].addDt;
                    myArray[i].addReleaseCode = arr[i].addReleaseCode;
                    myArray[i].addUser = arr[i].addUser;
                    myArray[i].releaseGroupCode = arr[i].releaseGroupCode;
                    myArray[i].releaseStrategy = arr[i].releaseStrategy;
                    myArray[i].releaseCode = arr[i].releaseCode;
                    myArray[i].releaseDate = arr[i].releaseDate;
                    myArray[i].releaseStatusCode = arr[i].releaseStatusCode;
                    myArray[i].hodRemarks = arr[i].hodRemarks;
                    myArray[i].hrUser = arr[i].hrUser;
                    myArray[i].hrReleaseDate = arr[i].hrReleaseDate;
                    myArray[i].hrReleaseStatusCode = arr[i].hrReleaseStatusCode;
                    myArray[i].hrRemarks = arr[i].hrRemarks;
                };
                $scope.gprData = myArray;
                $scope.gprData = $filter('orderBy')($scope.gprData, 'empUnqId');
                $scope.$digest();
            };
        }; gpr.send();
    };
    $scope.SelEmpData; $scope.PopUp = function (empCode, hrflg, isConfirmationflg, rQuatorNo) {
        var rData = $scope.gprData;
        for (var i = 0; i < rData.length; i++) {
            if (empCode === parseInt(rData[i].empUnqId) && rQuatorNo === parseInt(rData[i].reviewQtrNo)) {
                $scope.SelEmpData = rData[i];
                var periodFrom = rData[i].periodFrom; if (periodFrom != "" && periodFrom != null) {
                    $("#txtPeriodFrom").val(rData[i].periodFrom.substring(0, rData[i].periodFrom.indexOf("T")));
                } else { $("#txtPeriodFrom").val(""); };
                var periodTo = rData[i].periodTo; if (periodTo != "" && periodTo != null) {
                    $("#txtPeriodTo").val(rData[i].periodTo.substring(0, rData[i].periodTo.indexOf("T")));
                } else { $("#txtPeriodTo").val(""); };
                $("#txtEmpName").val(rData[i].empName);
                $("#txtSapid").val(rData[i].empUnqId);
                $("#txtDesgDept").val(rData[i].desgName + "/" + rData[i].deptName);
                var joinDate = rData[i].joinDate; if (joinDate != "" && joinDate != null) {
                    $("#txtJoiningDt").val(rData[i].joinDate.substring(0, rData[i].joinDate.indexOf("T")));
                } else { $("#txtJoiningDt").val(""); };
                $("#txtAssignments").val(rData[i].assignments);
                $("#txtStrength").val(rData[i].strength);
                $("#txtImprovement").val(rData[i].improvements);
                $("#txtSuggestion").val(rData[i].suggestions);
                $("#cmbRating").val(rData[i].rating);
                if (isConfirmationflg === false) { $("#divRecom").hide(); } else {
                    $("#cmbRecommendation").val(rData[i].recommendation);
                    $("#txtRemarks").val(rData[i].remarks);
                    $("#divRecom").show();
                };
                if (hrflg) { $("#txtHodRemarks").val(rData[i].hodRemarks); };
            };
        };
        $('#ReviewModel').modal('show');
    };
    ///Submit/Release Review/Confirmation Details.
    $scope.SubmitReview = function (reviewData, releaser) {
        var details = $scope.SelEmpData;
        if (releaser === false) {
            if ((typeof (reviewData) === "undefined")) { alert("All the details are mandatory"); return false; };
        };
        var assignments = $("#txtAssignments").val(), strength = $("#txtStrength").val(), improvement = $("#txtImprovement").val(),
            suggestion = $("#txtSuggestion").val(), rating = $("#cmbRating").val();
        if (assignments == "" || strength == "" || improvement == "" || suggestion == "" || rating == "") {
            alert("All the details are mandatory"); return false;
        };
        var jsonObj = {};
        jsonObj.EmpUnqId = details.empUnqId;
        jsonObj.ReviewQtrNo = details.reviewQtrNo; jsonObj.IsConfirmation = details.isConfirmation; jsonObj.ReviewDate = details.reviewDate;
        jsonObj.PeriodFrom = details.periodFrom; jsonObj.PeriodTo = details.periodTo;
        jsonObj.Assignments = assignments; jsonObj.Strength = strength; jsonObj.Improvements = improvement; jsonObj.Suggestions = suggestion;
        jsonObj.Rating = rating;
        if (details.isConfirmation === false) {
            jsonObj.Recommendation = "N"; jsonObj.Remarks = "";
        } else {
            jsonObj.Recommendation = $("#cmbRecommendation").val(); jsonObj.Remarks = $("#txtRemarks").val();
        };
        if (releaser === false) {
            jsonObj.AddDt = new Date(); jsonObj.AddReleaseCode = $("#myEmpUnqId").val(); jsonObj.AddUser = $("#myEmpUnqId").val();
            jsonObj.ReleaseStrategy = details.releaseStrategy;
        } else if (releaser === true) {
            jsonObj.AddDt = details.addDt; jsonObj.AddReleaseCode = details.addReleaseCode; jsonObj.AddUser = details.addUser;
            jsonObj.ReleaseStrategy = details.releaseStrategy; jsonObj.HodRemarks = $("#txtHodRemarks").val();
            jsonObj.ReleaseCode = $("#myEmpUnqId").val(); jsonObj.ReleaseDate = new Date(); jsonObj.ReleaseStatusCode = "F";
        };
        jsonObj = JSON.stringify(jsonObj);
        var spr = new XMLHttpRequest();
        if (releaser === false) { spr.open("POST", $scope._Conpath + "ProgressReview/SubmitReview", true); }
        else if (releaser === true) { spr.open("POST", $scope._Conpath + "ProgressReview/ReleaseReview", true); }
        spr.setRequestHeader("Content-Type", "application/json"); spr.onreadystatechange = function () {
            if (4 === spr.readyState && spr.status === 200) {
                $("#txtEmpName").val(""); $("#txtSapid").val(""); $("#txtDesgDept").val(""); $("#txtJoiningDt").val("");
                $("#txtPeriodFrom").val(""); $("#txtPeriodTo").val("");
                $("#txtAssignments").val(""); $("#txtStrength").val(""); $("#txtImprovement").val(""); $("#txtSuggestion").val("");
                $("#cmbRating").val(""); $("#cmbRecommemdation").val(""); $("#txtRemarks").val("");
                if (releaser === true) { $("#txtHodRemarks").val(""); };
                jQuery('#btnClose').click();
                document.getElementById("MessageBox").innerHTML =
                    "<div class='alert alert-success alert-dismissable'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
                    "<strong>Submitted Sucesfully.. </strong></div>"; $('#MessageBox').show();
                if (releaser === false) { $scope.GetReviews(false, false); }
                else if (releaser === true) { $scope.GetReviews(true, false); };
            } else if (spr.status === 400 || spr.status === 403 || spr.status === 404 || spr.status === 405 || spr.status === 408 ||
                spr.status === 500 || spr.status === 503) {
                var str = spr.responseText.replace("[", '').replace("]", '').toString(); var fields = str.split(','); var er = "";
                for (var i = 0; i < fields.length; i++) { er = er + fields[i] + "<br/>"; };
                $("#txtEmpName").val(""); $("#txtSapid").val(""); $("#txtDesgDept").val(""); $("#txtJoiningDt").val("");
                $("#txtPeriodFrom").val(""); $("#txtPeriodTo").val("");
                $("#txtAssignments").val(""); $("#txtStrength").val(""); $("#txtImprovement").val(""); $("#txtSuggestion").val("");
                $("#cmbRating").val(""); $("#cmbRecommemdation").val(""); $("#txtRemarks").val("");
                if (releaser === true) { $("#txtHodRemarks").val(""); };
                jQuery('#btnClose').click();
                document.getElementById("MessageBox").innerHTML =
                    "<div class='alert alert-warning alert-dismissable'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a> <strong>" + er +
                    "</strong></div>"; $('#MessageBox').show();
            };
        }; spr.send(jsonObj);
    };
    ///HR: Release Review/Confirmation.
    $scope.HRRelease = function (sts, rmks) {
        if (sts === "R") {
            if (rmks === "" || rmks === "undefined") {
                alert("Remarks is mandatory for rejection");
                return false;
            }
        };
        var details = $scope.SelEmpData;
        var jsonObj = {};
        jsonObj.EmpUnqId = details.empUnqId;
        jsonObj.ReviewQtrNo = details.reviewQtrNo;
        jsonObj.IsConfirmation = details.isConfirmation;
        jsonObj.ReviewDate = details.reviewDate;
        jsonObj.PeriodFrom = details.periodFrom;
        jsonObj.PeriodTo = details.periodTo;
        jsonObj.Assignments = details.assignments;
        jsonObj.Strength = details.strength;
        jsonObj.Improvements = details.improvement;
        jsonObj.Suggestions = details.suggestion;
        jsonObj.Rating = details.rating;
        jsonObj.Recommendation = details.recommendation;
        jsonObj.Remarks = details.remarks;
        jsonObj.AddDt = details.addDt;
        jsonObj.AddReleaseCode = details.addReleaseCode;
        jsonObj.AddUser = details.addUser;
        jsonObj.ReleaseStrategy = details.releaseStrategy;
        jsonObj.HodRemarks = details.hodRemarks;
        jsonObj.ReleaseCode = details.releaseCode;
        jsonObj.ReleaseDate = details.releaseDate;
        jsonObj.ReleaseStatusCode = details.releaseStatusCode;
        jsonObj.HrUser = $("#myEmpUnqId").val();
        jsonObj.HrReleaseDate = new Date();
        jsonObj.HrReleaseStatusCode = sts;
        jsonObj.HrRemarks = rmks;
        jsonObj = JSON.stringify(jsonObj);
        var spr = new XMLHttpRequest();
        spr.open("POST", $scope._Conpath + "ProgressReview/HrRelease", true);
        spr.setRequestHeader("Content-Type", "application/json");
        spr.onreadystatechange = function () {
            if (4 === spr.readyState && spr.status === 200) {
                $("#txtEmpName").val(""); $("#txtSapid").val(""); $("#txtDesgDept").val(""); $("#txtJoiningDt").val("");
                $("#txtPeriodFrom").val(""); $("#txtPeriodTo").val("");
                $("#txtAssignments").val(""); $("#txtStrength").val(""); $("#txtImprovement").val(""); $("#txtSuggestion").val("");
                $("#cmbRating").val(""); $("#cmbRecommemdation").val(""); $("#txtRemarks").val(""); $("#txtHodRemarks").val("");
                jQuery('#btnClose').click();
                document.getElementById("MessageBox").innerHTML =
                    "<div class='alert alert-success alert-dismissable'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
                    "<strong>Submitted Sucesfully.. </strong></div>"; $('#MessageBox').show();
                $scope.GetReviews(false, true);
            } else if (spr.status === 400 || spr.status === 403 || spr.status === 404 || spr.status === 405 || spr.status === 408 ||
                spr.status === 500 || spr.status === 503) {
                var str = spr.responseText.replace("[", '').replace("]", '').toString(); var fields = str.split(','); var er = "";
                for (var i = 0; i < fields.length; i++) { er = er + fields[i] + "<br/>"; };
                $("#txtEmpName").val(""); $("#txtSapid").val(""); $("#txtDesgDept").val(""); $("#txtJoiningDt").val("");
                $("#txtPeriodFrom").val(""); $("#txtPeriodTo").val("");
                $("#txtAssignments").val(""); $("#txtStrength").val(""); $("#txtImprovement").val(""); $("#txtSuggestion").val("");
                $("#cmbRating").val(""); $("#cmbRecommemdation").val(""); $("#txtRemarks").val(""); $("#txtHodRemarks").val("");
                jQuery('#btnClose').click();
                document.getElementById("MessageBox").innerHTML =
                    "<div class='alert alert-warning alert-dismissable'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a> <strong>" + er +
                    "</strong></div>"; $('#MessageBox').show();
            };
        }; spr.send(jsonObj);
    };
    $scope.garData; $scope.GetAllReviews = function (pendingFlg) {
        $("#loading").removeClass("deactivediv"), $("#loading").addClass("activediv");
        var fromDt, toDt;
        fromDt = $("#FromDt").val();
        toDt = $("#ToDt").val();
        var gar = new XMLHttpRequest();
        gar.open("GET", $scope._Conpath + "ProgressReview/GetAllReviews?fromDate=" + fromDt + "&toDate=" + toDt + "&pendingOnly=" + pendingFlg, true);
        gar.setRequestHeader("Accept", "application/json");
        gar.onreadystatechange = function () {
            if (4 === gar.readyState) {
                var json = JSON.parse(gar.responseText); var arr = new Array(); arr = json; var myArray = [];
                for (var i = 0; i < arr.length; i++) {
                    myArray.push([]);
                    myArray[i].empUnqId = arr[i].empUnqId;
                    myArray[i].empName = arr[i].employee.empName;
                    myArray[i].wrkGrpDesc = arr[i].employee.wrkGrpDesc;
                    myArray[i].unitName = arr[i].employee.unitName;
                    myArray[i].deptName = arr[i].employee.deptName;
                    myArray[i].statName = arr[i].employee.statName;
                    myArray[i].catName = arr[i].employee.catName;
                    myArray[i].empTypeName = arr[i].employee.empTypeName;
                    myArray[i].gradeName = arr[i].employee.gradeName;
                    myArray[i].desgName = arr[i].employee.desgName;
                    myArray[i].location = arr[i].employee.location;
                    myArray[i].joinDate = arr[i].employee.joinDate;
                    myArray[i].reviewQtrNo = arr[i].reviewQtrNo;
                    myArray[i].isConfirmation = arr[i].isConfirmation;
                    myArray[i].reviewDate = arr[i].reviewDate;
                    myArray[i].periodFrom = arr[i].periodFrom;
                    myArray[i].periodTo = arr[i].periodTo;
                    myArray[i].assignments = arr[i].assignments;
                    myArray[i].strength = arr[i].strength;
                    myArray[i].improvements = arr[i].improvements;
                    myArray[i].suggestions = arr[i].suggestions;
                    myArray[i].rating = arr[i].rating;
                    myArray[i].remarks = arr[i].remarks;
                    myArray[i].recommendation = arr[i].recommendation;

                    myArray[i].addDt = arr[i].addDt;
                    myArray[i].addReleaseCode = arr[i].addReleaseCode;
                    myArray[i].addUser = arr[i].addUser;
                    myArray[i].addEmpName = arr[i].addEmpName;
                    myArray[i].addReleaseStatusCode = arr[i].addReleaseStatusCode;

                    myArray[i].releaseGroupCode = arr[i].releaseGroupCode;
                    myArray[i].releaseStrategy = arr[i].releaseStrategy;

                    myArray[i].releaseCode = arr[i].releaseCode;
                    myArray[i].releaseEmpName = arr[i].releaseEmpName;
                    myArray[i].releaseDate = arr[i].releaseDate;
                    myArray[i].releaseStatusCode = arr[i].releaseStatusCode;
                    myArray[i].hodRemarks = arr[i].hodRemarks;

                    myArray[i].hrUser = arr[i].hrUser;
                    myArray[i].hrEmpName = arr[i].hrEmpName;
                    myArray[i].hrReleaseDate = arr[i].hrReleaseDate;
                    myArray[i].hrReleaseStatusCode = arr[i].hrReleaseStatusCode;
                    myArray[i].hrRemarks = arr[i].hrRemarks;
                };
                $scope.garData = myArray;
                $scope.garData = $filter('orderBy')($scope.garData, 'empUnqId');
                $scope.$digest();
                $("#loading").removeClass("activediv"), $("#loading").addClass("deactivediv");
            } else {
                $("#loading").removeClass("activediv"), $("#loading").addClass("deactivediv");
            };
        }; gar.send();
    };
    $scope.PopulateData = function (empid, recommendation, flg) {
        if (recommendation === "N") {
            $scope.GetPrint(empid);
            $("#reviewModel").modal("show");
        } else {
            $scope.GetLetter(empid);
            if (recommendation === "C" && flg === true) { $("#confirmationModel").modal("show"); };
            if (recommendation === "C" && flg === false) { $("#confirmModel").modal("show"); };
            if (recommendation === "E") { $("#extensionModel").modal("show"); };
        };
    };
    //fv
    $scope.GetPrint = function (empid) {
        var arr = new Array();
        arr = $scope.garData;
        var cnt = 0;
        myArray = [];
        for (var i = 0; i < arr.length; i++) {
            if (empid === parseInt(arr[i].empUnqId) && (arr[i].recommendation === "N")) {
                myArray.push([]);
                myArray[cnt].empUnqId = arr[i].empUnqId;
                myArray[cnt].empName = arr[i].empName;
                myArray[cnt].deptName = arr[i].deptName;
                myArray[cnt].statName = arr[i].statName;
                myArray[cnt].desgName = arr[i].desgName;
                myArray[cnt].gradeName = arr[i].gradeName;
                myArray[cnt].joinDate = arr[i].joinDate;
                myArray[cnt].reviewDate = arr[i].reviewDate;
                myArray[cnt].recommendation = arr[i].recommendation;
                myArray[cnt].hodRemarks = arr[i].hodRemarks;
                myArray[cnt].periodFrom = arr[i].periodFrom;
                myArray[cnt].periodTo = arr[i].periodTo;
                myArray[cnt].assignments = arr[i].assignments;
                myArray[cnt].strength = arr[i].strength;
                myArray[cnt].improvements = arr[i].improvements;
                myArray[cnt].suggestions = arr[i].suggestions;
                myArray[cnt].rating = arr[i].rating;
                if (arr[i].rating == "S") { myArray[cnt].ratingDesc = "Star" }
                else if (arr[i].rating == "G") { myArray[cnt].ratingDesc = "Good"; }
                else if (arr[i].rating == "A") { myArray[cnt].ratingDesc = "Average"; }
                else if (arr[i].rating == "P") { myArray[cnt].ratingDesc = "Poor"; };
                myArray[cnt].addDt = arr[i].addDt;
                myArray[cnt].addEmpName = arr[i].addEmpName;
                myArray[cnt].releaseDate = arr[i].releaseDate;
                myArray[cnt].releaseEmpName = arr[i].releaseEmpName;
                cnt++;
            };
        };
        $scope.prnData = myArray;
    };
    $scope.GetLetter = function (empid) {
        var arr = new Array();
        arr = $scope.garData;
        var cnt = 0;
        myArray = [];
        for (var i = 0; i < arr.length; i++) {
            if (empid === parseInt(arr[i].empUnqId) && (arr[i].recommendation === "C" || arr[i].recommendation === "E")) {
                myArray.push([]);
                myArray[cnt].empUnqId = arr[i].empUnqId;
                myArray[cnt].empName = arr[i].empName;
                myArray[cnt].deptName = arr[i].deptName;
                myArray[cnt].statName = arr[i].statName;
                myArray[cnt].desgName = arr[i].desgName;
                myArray[cnt].gradeName = arr[i].gradeName;
                myArray[cnt].joinDate = arr[i].joinDate;
                myArray[cnt].reviewDate = arr[i].reviewDate;
                myArray[cnt].recommendation = arr[i].recommendation;
                if (arr[i].recommendation == "C") { myArray[cnt].recommendationText = "Confirmation" }
                else if (arr[i].recommendation == "E") { myArray[cnt].recommendationText = "Extension"; }
                else if (arr[i].recommendation == "T") { myArray[cnt].recommendationText = "Termination"; }
                myArray[cnt].hodRemarks = arr[i].hodRemarks;
                myArray[cnt].periodFrom = arr[i].periodFrom;
                myArray[cnt].periodTo = arr[i].periodTo;
                myArray[cnt].assignments = arr[i].assignments;
                myArray[cnt].strength = arr[i].strength;
                myArray[cnt].improvements = arr[i].improvements;
                myArray[cnt].suggestions = arr[i].suggestions;
                myArray[cnt].rating = arr[i].rating;
                if (arr[i].rating == "S") { myArray[cnt].ratingDesc = "Star" }
                else if (arr[i].rating == "G") { myArray[cnt].ratingDesc = "Good"; }
                else if (arr[i].rating == "A") { myArray[cnt].ratingDesc = "Average"; }
                else if (arr[i].rating == "P") { myArray[cnt].ratingDesc = "Poor"; };
                myArray[cnt].addDt = arr[i].addDt;
                myArray[cnt].addEmpName = arr[i].addEmpName;
                myArray[cnt].releaseDate = arr[i].releaseDate;
                myArray[cnt].releaseEmpName = arr[i].releaseEmpName;
                cnt++;
            };
        };
        $scope.prgrvw = myArray;
    };
    $scope.sort = function (keyname) { $scope.sortKey = keyname, $scope.reverse = !$scope.reverse };
    $scope.exportAllData = function (name) { setTimeout(function () { $("#loading").removeClass("deactivediv"), $("#loading").addClass("activediv"); var d = new Date; d = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate(); var FileName = name + d; $scope.JSONToCSVConvertor($scope.exportObj, FileName, !0), $("#loading").removeClass("activediv"), $("#loading").addClass("deactivediv") }, 100) };
    $scope.JSONToCSVConvertor = function (JSONData, ReportTitle, ShowLabel) { var arrData = "object" != typeof JSONData ? JSON.parse(JSONData) : JSONData, CSV = ""; if (CSV += ReportTitle + "\r\n\n", ShowLabel) { var row = ""; for (var index in arrData[0]) row += index + ","; row = row.slice(0, -1), CSV += row + "\r\n" } for (var i = 0; i < arrData.length; i++) { var row = ""; for (var index in arrData[i]) row += '"' + arrData[i][index] + '",'; row.slice(0, row.length - 1), CSV += row + "\r\n" } if ("" === CSV) return void alert("Invalid data"); var fileName = ""; fileName += ReportTitle.replace(/ /g, "_"); var uri = "data:text/csv;charset=utf-8," + escape(CSV), link = document.createElement("a"); link.href = uri, link.style = "visibility:hidden", link.download = fileName + ".csv", document.body.appendChild(link), link.click(), document.body.removeChild(link) };
});
app.directive("datepicker", function () { return { restrict: "A", require: "ngModel", link: function (scope, elem, attrs, ngModelCtrl) { var updateModel = function (dateText) { scope.$apply(function () { ngModelCtrl.$setViewValue(dateText) }) }, options = { dateFormat: "yy-mm-dd", onSelect: function (dateText) { updateModel(dateText) } }; elem.datepicker(options) } } });